<?php

namespace App\Http\Middleware;

use Closure;
use App\Events\ErrorBroadcasting;
use Storage;

class IpFilter
{
    /**
     * Handle an incoming request.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \Closure  $next
     * @return mixed
     */
    public function handle($request, Closure $next)
    {
        if(config('app.env')=='local'){
            return $next($request);
        }

        if (false == Storage::disk('local')->exists('allowed_ips.json')) {
            $content[]='';
            Storage::disk('local')->put('allowed_ips.json', json_encode($content));
        }

        //format of allowed_ips.json: ["127.0.0.1","192.168.0.110","192.168.0.108","103.233.113.67"]

        $allowedIps = json_decode(Storage::disk('local')->get('allowed_ips.json'), true);


        $userIP=$request->ip();

        if(true == empty($allowedIps) || false==in_array($userIP,$allowedIps)){
            $location=json_decode(file_get_contents('http://www.geoplugin.net/json.gp?ip='.$userIP));
            $message='IP: '.$userIP.'<br>';
            $message.='Country Code: '.$location->geoplugin_countryCode.'<br>';
            $message.='Country Name: '.$location->geoplugin_countryName.'<br>';
            $message.='Region: '.$location->geoplugin_regionName.'<br>';
            $message.='City: '.$location->geoplugin_city.'<br>';
            $message.='Zip/Pin Code: '.$location->geoplugin_areaCode.'<br>';
            $message.='Latitude: '.$location->geoplugin_latitude.'<br>';
            $message.='Logitude: '.$location->geoplugin_longitude.'<br>';
            $error = array(
                'type' => config('logging.error_type.IP_ADDR_NOT_ALLOWED'),
                'message' => $message,
                'date' => date('Y-m-d')
            );
            $objError = json_encode($error);
            broadcast(new ErrorBroadcasting($objError));

            return response(view('admin.errors.404_IP_NOT_ALLOWED')->with(['ip'=>$userIP]), 404);
        }

        return $next($request);
    }
}

