<?php

namespace App\Events;

use Illuminate\Broadcasting\Channel;
use Illuminate\Queue\SerializesModels;
use Illuminate\Broadcasting\PrivateChannel;
use Illuminate\Broadcasting\PresenceChannel;
use Illuminate\Foundation\Events\Dispatchable;
use Illuminate\Broadcasting\InteractsWithSockets;
use Illuminate\Contracts\Broadcasting\ShouldBroadcast;

class DisputeGuiltyFound implements ShouldBroadcast
{
    use Dispatchable, InteractsWithSockets, SerializesModels;

    public $userId;
    public $message;
    public $guilty;
    public $disputeId;

    /**
     * Create a new event instance.
     *
     * @return void
     */
    public function __construct($disputeId, $userId, $message, $guilty)
    {
        $this->userId=encodeHash($userId);
        $this->message=$message;
        $this->guilty=$guilty;
        $this->disputeId=$disputeId;
    }

    /**
     * Get the channels the event should broadcast on.
     *
     * @return \Illuminate\Broadcasting\Channel|array
     */
    public function broadcastOn()
    {
        //return new PrivateChannel('guilty-found-'.$this->disputeId.'-'.$this->userId);
        return new PrivateChannel('users.'. $this->userId);
    }
}

