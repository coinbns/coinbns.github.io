<?php

namespace App\Models;

use App\Models\Model;

class ForumPostReply extends Model
{
    /*Create Queries Start*/
    public static function createPostReply($data)
    {
        $postReply = new self;

        $postReply->forum_post_id = $data['forum_post_id'];
        $postReply->user_id = $data['user_id'];
        $postReply->message = $data['message'];
        $postReply->status = $data['status'];
        $postReply->save();

        return $postReply->id;
    }
    /*Create Queries End*/

    /*Find Queries Start*/
    public static function findForumPostReply($id)
    {
        return self::active()->find($id);
    }
    /*Find Queries End*/

    /*Get Queries Start*/
    public static function getLatestByPostWithVote($offset, $limit, $forumPostId)
    {
        return self::selectRaw('forum_post_replies.id, forum_post_replies.message as message,  forum_post_replies.created_at, users.username, SUM(forum_post_reply_votes.value) as total_votes')
            ->leftJoin('forum_post_reply_votes', 'forum_post_replies.id', '=',
                'forum_post_reply_votes.forum_post_reply_id')
            ->join('users', 'forum_post_replies.user_id', '=', 'users.id')
            ->where('forum_post_replies.forum_post_id', $forumPostId)
            ->groupBy('forum_post_replies.id')
            ->latest()
            ->offset($offset)
            ->limit($limit)
            ->get();
    }

    public static function getTopVotedByPostWithVote($offset, $limit, $forumPostId)
    {
        return self::selectRaw('forum_post_replies.id, forum_post_replies.message as message,  forum_post_replies.created_at, users.username, SUM(forum_post_reply_votes.value) as total_votes')
            ->leftJoin('forum_post_reply_votes', 'forum_post_replies.id', '=',
                'forum_post_reply_votes.forum_post_reply_id')
            ->join('users', 'forum_post_replies.user_id', '=', 'users.id')
            ->where('forum_post_replies.forum_post_id', $forumPostId)
            ->groupBy('forum_post_replies.id')
            ->orderBy('total_votes', 'desc')
            ->latest()
            ->offset($offset)
            ->limit($limit)
            ->get();
    }
    /*Get Queries End*/
}

