<?php

namespace App\Models;

use App\Models\Model;

class NewsletterEmail extends Model
{
    /*Constants Declarations Start*/

    //is_verified
    const UNVERIFIED = 0;
    const VERIFIED = 1;


    //Newsletter_Status
    const UNSUBSCRIBED = 0;
    const SUBSCRIBED = 1;


    /*Constants Declarations End*/

    /*Relations Start*/
    /*Relations End*/

    /*Create Queries Start*/
    /**
     * Model just to create a subscription request with default `is_verified = UNVERIFIED` and `newsletter_status = UNSUBSCRIBED`
     * @param $data
     * @return bool
     */
    public static function createSubscription($data)
    {
        $subscriber = new self;

        $subscriber->user_id = $data['user_id'];
        $subscriber->email_id = $data['email_id'];
        $subscriber->subscribing_address = $data['subscribing_address'];
        $subscriber->is_verified = self::UNVERIFIED;
        $subscriber->newsletter_status = self::UNSUBSCRIBED;

        return $subscriber->save();
    }
    /*Create Queries End*/

    /*Find Queries Start*/
    public static function findById($id)
    {
        return self::where('id', $id)->active()->first();
    }
    public static function findByUserId($userId)
    {
        return self::where('user_id', $userId)->active()->first();
    }
    public static function findByEmailId($emailId)
    {
        return self::where('email_id', $emailId)->active()->first();
    }
    public static function findBySubscribingAddress($address)
    {
        return self::where('subscribing_address', $address)->active()->first();
    }
    /*Find Queries End*/

    /*Get Queries Start*/
    public static function getVerifiedAndActiveSubscribers()
    {
        return self::where([
            'is_verified' => self::VERIFIED,
            'newsletter_status' =>self::SUBSCRIBED
        ])->active()->get();
    }
    /*Get Queries End*/

    /*Update Queries Start*/
    /*Update Queries End*/
}

