<?php

namespace App\Models;

// use App\Models\Model;

use App\Models\MongoModel as Model;

class ChatMessage extends Model
{
    //type
    const TYPE_TEXT = 1;
    const TYPE_IMAGE = 2;
    const TYPE_DOC = 3;

    //status
    const DELETED = 0;
    const ACTIVE = 1;
    const INACTIVE = 2;

    public $timestamps = false;

    /*Create Queries Start*/
    public static function createChatMessage($data)
    {
        $chatMessage = new self;

        $chatMessage->user_id = $data['user_id'];
        $chatMessage->trade_id = $data['trade_id'];
        $chatMessage->type = $data['type'];
        $chatMessage->content = $data['content'];
        $chatMessage->recipient_id = $data['recipient_id'];
        $chatMessage->recipient_read_at = $data['recipient_read_at'];
        $chatMessage->created_at = $data['created_at'];
        $chatMessage->status = $data['status'];
        $chatMessage->save();

        return $chatMessage->id;
    }
    /*Create Queries End*/

    /*Get Queries Start*/
    public static function getChatByTradeId($offset, $limit, $tradeId)
    {
        return self::active()
            ->where('trade_id', $tradeId)
            ->orderBy('created_at', 'desc')
            ->offset($offset)
            ->limit($limit)
            ->get();
    }

    public static function getAllChatByTradeId($tradeId)
    {
        return self::active()
            ->where('trade_id', (int)$tradeId)
            ->orderBy('created_at', 'asc')
            ->get();
    }

    public static function getUnreadByTradeIdByRecipientId($tradeIds, $recipientId)
    {
        return self::select('trade_id')
            ->whereIn('trade_id', $tradeIds)
            ->whereNull('recipient_read_at')
            ->where('recipient_id', $recipientId)
            ->active()
            ->get();
    }
    /*Get Queries End*/

    /*Update Queries Start*/
    public static function updateMessageStatusAsRead($tradeId, $senderId, $recipientId, $readAt)
    {
        // dd('tr'.$tradeId, 'sen'.$senderId, 'rece'.$recipientId, $readAt);
        return self::where([
            'user_id' => $senderId,
            'recipient_id' => $recipientId,
            'trade_id' => $tradeId,
            'recipient_read_at' => null
        ])->update([
            'recipient_read_at' => $readAt
        ]);
    }

    public static function updateTradeMessageStatusAsRead($tradeId, $readAt)
    {
        // dd('tr'.$tradeId, 'sen'.$senderId, 'rece'.$recipientId, $readAt);
        return self::where([
            'trade_id' => $tradeId,
            'recipient_read_at' => null
        ])->update([
            'recipient_read_at' => $readAt
        ]);
    }
    /*Update Queries End*/
}

