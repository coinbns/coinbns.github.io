<?php

namespace App\Events;

use Illuminate\Broadcasting\Channel;
use Illuminate\Queue\SerializesModels;
use Illuminate\Broadcasting\PrivateChannel;
use Illuminate\Broadcasting\PresenceChannel;
use Illuminate\Foundation\Events\Dispatchable;
use Illuminate\Broadcasting\InteractsWithSockets;
use Illuminate\Contracts\Broadcasting\ShouldBroadcast;


class DisputeChatMessage implements ShouldBroadcast
{
    use InteractsWithSockets, SerializesModels;

    public $messageContent;
    public $disputeId;
    public $userId;
    public $type;

    public function __construct($disputeId, $messageContent, $userId, $type)
    {
        $this->disputeId = $disputeId;
        $this->userId = $userId;
        $this->messageContent = $messageContent;
        $this->type = $type;
    }

    public function broadcastOn()
    {
        // return new PresenceChannel('chat-dispute.'.$this->disputeId.'-'.$this->userId);
        return new PrivateChannel('users.'. $this->userId);
    }
}

